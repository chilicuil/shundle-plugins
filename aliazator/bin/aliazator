#!/bin/sh

_basename()
{
    [ -z "${1}" ] && return 1 || _basename__name="${1}"
    [ -z "${2}" ] || _basename__suffix="${2}"
    case "${_basename__name}" in
        /*|*/*) _basename__name="${_basename__name##*/}"
    esac

    if [ -n "${_basename__suffix}" ] && [ "${#_basename__name}" -gt "${#2}" ]; then
        _basename__name="${_basename__name%$_basename__suffix}"
    fi

    retval="${_basename__name}"
    #printf "%s" "${_basename__name}"
}

_usage()
{
    printf "%s\\n" "Usage: aliazator OPTION [ARGS]"
    printf "\\n"
    printf "%s\\n" "  enable  [subset]  enable plugin"
    printf "%s\\n" "  disable [subset]  disable plugins"
    printf "%s\\n" "  list    [subset]  list available plugins"
    printf "%s\\n" "  search  [pattern] look up where an alias is been sourced from, or if's managed by aliazator"
    return 1
}

_aliazator_list()
{
    _aliazator_list__aplugin="none,minimal,installed,all"

    _aliazator_list_meta()
    {
        [ -z "${ALIAZATOR_PLUGINS}" ] && ALIAZATOR_PLUGINS="${ALIAZATOR_CACHE}"
        while [ "${_aliazator_list__aplugin}" ]; do
            _aliazator_list__option="${_aliazator_list__aplugin%%,*}"
            if [ X"${ALIAZATOR_PLUGINS}" = X"${_aliazator_list__option}" ]; then
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_RED}" " +${_aliazator_list__option}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            else
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_YELLOW}" "  ${_aliazator_list__option}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            fi
            [ X"${_aliazator_list__aplugin}" = X"${_aliazator_list__option}" ] && \
                _aliazator_list__aplugin='' || _aliazator_list__aplugin="${_aliazator_list__aplugin#*,}"
        done
    }

    _aliazator_list_sourced()
    {
        [ -z "${1}" ] && return 1
        _aliazator_list_sourced__l="${ALIAZATOR_PLUGINS_ARRAY}"
        while [ "${_aliazator_list_sourced__l}" ]; do
            _aliazator_list_sourced__option="${_aliazator_list_sourced__l%%,*}"
            [ X"${1}" = X"${_aliazator_list_sourced__option}" ] && return 0
            [ X"${_aliazator_list_sourced__l}" = X"${_aliazator_list_sourced__option}" ] &&\
                _aliazator_list_sourced__l='' || _aliazator_list_sourced__l="${_aliazator_list_sourced__l#*,}"
        done
        return 1
    }

    if [ -z "${1}" ]; then
        printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_BLUE}" "meta" "${_BIN_SHUNDLE_ENV_NORMAL}"
        _aliazator_list_meta

        printf "\\n"
        printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_BLUE}" "sets" "${_BIN_SHUNDLE_ENV_NORMAL}"
        for aliases in "${ALIAZATOR_PATH}"/default/*; do
            _basename "${aliases}" .aliases && baliases="${retval}"
            if _aliazator_list_sourced "${baliases}"; then
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_RED}" " +${baliases}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            else
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_YELLOW}" "  ${baliases}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            fi
        done

        printf "\\n"
        for aliases in "${ALIAZATOR_PATH}"/extra/*; do
            _basename "${aliases}" .aliases && baliases="${retval}"
            if _aliazator_list_sourced "${baliases}"; then
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_RED}" " +${baliases}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            else
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_YELLOW}" "  ${baliases}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            fi
        done
    else
        [ -f "${ALIAZATOR_PATH}/extra/${1}.aliases" ] && { cat "${ALIAZATOR_PATH}/extra/${1}.aliases"; return 0; }
        [ -f "${ALIAZATOR_PATH}/default/${1}.aliases" ] && { cat "${ALIAZATOR_PATH}/default/${1}.aliases"; return 0; }
    fi
}

_aliazator_disable()
{
    _aliazator_desource()
    {
        [ -z "${1}" ] && return
        _basename "${1}" .aliases && _aliazator_desource__plugin="${retval}"
        ALIAZATOR_PLUGINS_ARRAY="$(printf "%s" "${ALIAZATOR_PLUGINS_ARRAY}"|sed -e "s:${_aliazator_desource__plugin},::g")"
        #TODO 01-11-2013 04:35 >> avoid using files
        sed -e "s:\<alias:unalias:g" -e "s:=.*::g" "${1}" > /tmp/"${_aliazator_desource__plugin}".disable
        . /tmp/"${_aliazator_desource__plugin}".disable >/dev/null 2>&1
        \rm -f /tmp/"${_aliazator_desource__plugin}".disable
    }

    case "${1}" in
        minimal)
            for aliases in "${ALIAZATOR_PATH}"/default/*; do
                _basename "${aliases}" .aliases
                case "${retval}" in
                    general|zcustom|${OSTYPE}) [ -f "${aliases}" ] && _aliazator_desource "${aliases}" ;;
                    osx) #special case, OSTYPE returns string + version on osx systems, wtf
                        case "${OSTYPE}" in darwin*) [ -f "${aliases}" ] && _aliazator_desource "${aliases}".aliases;; esac ;;
                esac
            done
            ;;
        installed)
            _aliazator_disable minimal
            for aliases in "${ALIAZATOR_PATH}"/extra/*; do
                _basename "${aliases}" .aliases
                case "${retval}" in
                    *)
                        if type "${retval}" 1> /dev/null 2>&1; then
                            _aliazator_desource "${aliases}"
                        fi
                        ;;
                esac done
            ;;
        all)
            _aliazator_disable minimal
            for aliases in "${ALIAZATOR_PATH}"/extra/*; do
                _basename "${aliases}" .aliases
                case "${retval}" in
                    *) [ -f "${aliases}" ] && _aliazator_desource "${aliases}" ;;
                esac
            done
            ;;
        *)
            [ -f "${ALIAZATOR_PATH}/extra/${1}.aliases" ]   && { _aliazator_desource "${ALIAZATOR_PATH}/extra/${1}.aliases";   return 0; }
            [ -f "${ALIAZATOR_PATH}/default/${1}.aliases" ] && { _aliazator_desource "${ALIAZATOR_PATH}/default/${1}.aliases"; return 0; }
        ;;
    esac
}

_aliazator_search()
{
    [ "${#}" -lt "1" ] && _usage
    grep -rin "${1}" "${ALIAZATOR_PATH}"
}

if [ "${#}" -lt "1" ]; then
   _usage
else
    case "${1}" in
        #list|disable|search) _aliazator_$1 "$2";;
        #enable) . $ALIAZATOR_PATH/../bin/aliazator-enable "$2" ;;
        l*) _aliazator_list    "${2}";;
        d*) _aliazator_disable "${2}";;
        s*) _aliazator_search  "${2}";;
        e*) . "${ALIAZATOR_PATH}/../bin/aliazator-enable" "${2}" ;;
        *) _usage ;;
    esac
fi

# vim: set ts=8 sw=4 tw=0 ft=sh :
