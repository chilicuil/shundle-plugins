#!/bin/sh

_usage()
{
    printf "%s\\n" "Usage: colorize OPTION [ARGS]"
    printf "\\n"
    printf "%s\\n" "  enable [ps|theme|utils] item|file   enable item"
    printf "%s\\n" "  list   [ps|theme|utils]             list available items"
    printf "%s\\n" "  show   [ps|theme|utils] item|file   show item source"
    return 1
}

_basename()
{
    [ -z "${1}" ] && return 1 || _basename_var_name="${1}"
    [ -z "${2}" ] || _basename_var_suffix="${2}"
    case "${_basename_var_name}" in
        /*|*/*) _basename_var_name="${_basename_var_name##*/}"
    esac

    if [ -n "${_basename_var_suffix}" ] && [ "${#_basename_var_name}" -gt "${#2}" ]; then
        _basename_var_name="${_basename_var_name%$_basename_var_suffix}"
    fi

    retval="${_basename_var_name}"
    #printf "%s" "${_basename_var_name}"
}

_colorize_list()
{
    _colorize_list_sourced()
    {
        [ -z "${1}" ] && return 1
        case "${1}" in
            "${COLORIZE_THEME}"|"${COLORIZE_PS}"|"${COLORIZE_UTILS}") return 0 ;;
        esac
        return 1
    }

    _colorize_list_item()
    {
        [ -z "${1}" ] && return 1
        printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_BLUE}" "${1}" "${_BIN_SHUNDLE_ENV_NORMAL}"
        for item in "${COLORIZE_PATH}"/"${1}"/*; do
            _basename "${item}" ."${1}"
            bitem="${retval}"
            if _colorize_list_sourced "${bitem}"; then
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_RED}"    " +${bitem}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            else
                printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_NORMAL}" "  ${bitem}" "${_BIN_SHUNDLE_ENV_NORMAL}"
            fi
        done
        case "${1}" in
            ps)    [ -f "${COLORIZE_PS}" ]    && printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_NORMAL}" " +${COLORIZE_PS}"    "${_BIN_SHUNDLE_ENV_NORMAL}" ;;
            theme) [ -f "${COLORIZE_THEME}" ] && printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_NORMAL}" " +${COLORIZE_THEME}" "${_BIN_SHUNDLE_ENV_NORMAL}" ;;
            utils) [ -f "${COLORIZE_UTILS}" ] && printf "%b%s%b\\n" "${_BIN_SHUNDLE_ENV_NORMAL}" " +${COLORIZE_UTILS}" "${_BIN_SHUNDLE_ENV_NORMAL}" ;;
        esac
        return 0
    }

    if [ -z "${1}" ]; then
        _colorize_list_item ps
        printf "\\n"
        _colorize_list_item theme
        printf "\\n"
        _colorize_list_item utils
    else
        case "${1}" in
            p*) _colorize_list_item ps    ;;
            t*) _colorize_list_item theme ;;
            u*) _colorize_list_item utils ;;
            *)  _colorize_list            ;;
        esac
    fi
}

_colorize()
{
    [ -z "${1}" ] && { _usage; return 1; }
    _colorize_write_xdefault()
    {
        [ -f "${1}" ] || return 1
        (
        printf "%s\\n"    "! $COLORIZE_THEME - autogenerated by colorize, do not edit"
        printf "%s\\n\\n" "! https://github.com/chilicuil/shundle-plugins/tree/master/colorize"
        printf "%s\\n\\n" "! vim:enc=utf-8:nu:ai:si:et:ts=4:sw=4:ft=xdefaults:"
        _cwx__colors="$(awk '/color.+=/ || /foreground=/ || /background=/ {print $1}' "${1}")"
        eval "${_cwx__colors}"
        #translate shell (color0="ff/ff/ff") to X resources syntax (*color0:rgb:ff/ff/ff)
        printf "%s\\n" "${_cwx__colors}" | \
            while read _cwx__line; do eval printf "%s" "$_cwx__line"; printf "\\n"; done | \
            awk '{gsub(/"/,""); sub(/=/,":rgb:"); print "*"$1}'
        ) > ~/.Xdefaults-theme-colorize
    }

    if [ -z "${3}" ]; then
        for item in ps theme utils; do
            [ -f "${COLORIZE_PATH}/${item}/${2}.${item}" ] && { _colorize "${1}" "${item}" "${2}"; return "${?}"; }
        done
        _colorize "${1}" local "${2}"
    else
        case "${1}" in
            enable) _colorize_action__cmd="."   ;;
            show)   _colorize_action__cmd="cat" ;;
        esac
        case "${2}" in
            p*) item="ps"   ; [ X"${1}" = X"enable" ] && COLORIZE_PS="${3}"    ;;
            t*) item="theme"; [ X"${1}" = X"enable" ] && COLORIZE_THEME="${3}" ;;
            u*) item="utils"; [ X"${1}" = X"enable" ] && COLORIZE_UTILS="${3}" ;;
            *) [ -f "${3}" ] && "$_colorize_action__cmd" "${3}" && \
               _colorize_write_xdefault "${3}" || return 1 ;;
        esac
        if [ -f "${COLORIZE_PATH}/${item}/${3}.${item}" ]; then
            "${_colorize_action__cmd}" "${COLORIZE_PATH}/${item}/${3}.${item}" && \
            _colorize_write_xdefault   "${COLORIZE_PATH}/${item}/${3}.${item}"
        else
            _colorize "${1}" local   "${3}" && _colorize_write_xdefault "${1}"
        fi
    fi
}

if [ "${#}" -lt "1" ]; then
   _usage
else
    case "${1}" in
        l*) shift; _colorize_list   "${@}";;
        s*) shift; _colorize show   "${@}";;
        e*) shift; _colorize enable "${@}";;
        *)  _usage ;;
    esac
fi

# vim: set ts=8 sw=4 tw=0 ft=sh :
